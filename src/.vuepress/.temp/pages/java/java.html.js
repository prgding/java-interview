export const data = JSON.parse("{\"key\":\"v-8de5d8fa\",\"path\":\"/java/java.html\",\"title\":\"Java 基础\",\"lang\":\"zh-CN\",\"frontmatter\":{\"order\":1,\"icon\":\"healthicons:1-outline\",\"description\":\"String、StringBuffer、StringBuilder 的区别？ 1. 可变性 1. String 不可变、后两者可变 2. 线程安全 1. String, StringBuffer 线程安全 3. 性能 1. String 每次要 new 对象，性能低。 2. StringBuffer 可变但是线程安全，略微提升。 3. StringBu...\",\"head\":[[\"meta\",{\"property\":\"og:url\",\"content\":\"https://vuepress-theme-hope-docs-demo.netlify.app/java-interview/java/java.html\"}],[\"meta\",{\"property\":\"og:site_name\",\"content\":\"后端开发经验\"}],[\"meta\",{\"property\":\"og:title\",\"content\":\"Java 基础\"}],[\"meta\",{\"property\":\"og:description\",\"content\":\"String、StringBuffer、StringBuilder 的区别？ 1. 可变性 1. String 不可变、后两者可变 2. 线程安全 1. String, StringBuffer 线程安全 3. 性能 1. String 每次要 new 对象，性能低。 2. StringBuffer 可变但是线程安全，略微提升。 3. StringBu...\"}],[\"meta\",{\"property\":\"og:type\",\"content\":\"article\"}],[\"meta\",{\"property\":\"og:locale\",\"content\":\"zh-CN\"}],[\"meta\",{\"property\":\"article:author\",\"content\":\"Ding\"}],[\"script\",{\"type\":\"application/ld+json\"},\"{\\\"@context\\\":\\\"https://schema.org\\\",\\\"@type\\\":\\\"Article\\\",\\\"headline\\\":\\\"Java 基础\\\",\\\"image\\\":[\\\"\\\"],\\\"dateModified\\\":null,\\\"author\\\":[{\\\"@type\\\":\\\"Person\\\",\\\"name\\\":\\\"Ding\\\",\\\"url\\\":\\\"https://github.com/prgding\\\"}]}\"]]},\"headers\":[{\"level\":2,\"title\":\"String、StringBuffer、StringBuilder 的区别？\",\"slug\":\"string、stringbuffer、stringbuilder-的区别\",\"link\":\"#string、stringbuffer、stringbuilder-的区别\",\"children\":[]},{\"level\":2,\"title\":\"String 为什么是不可变的？\",\"slug\":\"string-为什么是不可变的\",\"link\":\"#string-为什么是不可变的\",\"children\":[]},{\"level\":2,\"title\":\"Java 9 为何要将 String 的底层实现由 char[] 改成了 byte[] ?\",\"slug\":\"java-9-为何要将-string-的底层实现由-char-改成了-byte\",\"link\":\"#java-9-为何要将-string-的底层实现由-char-改成了-byte\",\"children\":[]},{\"level\":2,\"title\":\"String s1 = new String(\\\"abc\\\"); 这段代码创建了几个字符串对象？\",\"slug\":\"string-s1-new-string-abc-这段代码创建了几个字符串对象\",\"link\":\"#string-s1-new-string-abc-这段代码创建了几个字符串对象\",\"children\":[]},{\"level\":2,\"title\":\"== 和 equals() 的区别\",\"slug\":\"和-equals-的区别\",\"link\":\"#和-equals-的区别\",\"children\":[]},{\"level\":2,\"title\":\"hashCode() 作用\",\"slug\":\"hashcode-作用\",\"link\":\"#hashcode-作用\",\"children\":[]},{\"level\":2,\"title\":\"为什么重写 equals() 时必须重写 hashCode() 方法？\",\"slug\":\"为什么重写-equals-时必须重写-hashcode-方法\",\"link\":\"#为什么重写-equals-时必须重写-hashcode-方法\",\"children\":[]},{\"level\":2,\"title\":\"包装类型的缓存机制了解么？\",\"slug\":\"包装类型的缓存机制了解么\",\"link\":\"#包装类型的缓存机制了解么\",\"children\":[]},{\"level\":2,\"title\":\"自动装箱与拆箱了解吗？原理是什么？\",\"slug\":\"自动装箱与拆箱了解吗-原理是什么\",\"link\":\"#自动装箱与拆箱了解吗-原理是什么\",\"children\":[]},{\"level\":2,\"title\":\"注解\",\"slug\":\"注解\",\"link\":\"#注解\",\"children\":[]},{\"level\":2,\"title\":\"异常\",\"slug\":\"异常\",\"link\":\"#异常\",\"children\":[{\"level\":3,\"title\":\"为什么要设计异常？\",\"slug\":\"为什么要设计异常\",\"link\":\"#为什么要设计异常\",\"children\":[]},{\"level\":3,\"title\":\"层次结构\",\"slug\":\"层次结构\",\"link\":\"#层次结构\",\"children\":[]}]},{\"level\":2,\"title\":\"重写和重载区别\",\"slug\":\"重写和重载区别\",\"link\":\"#重写和重载区别\",\"children\":[]},{\"level\":2,\"title\":\"集合\",\"slug\":\"集合\",\"link\":\"#集合\",\"children\":[{\"level\":3,\"title\":\"两大集合以及实现类\",\"slug\":\"两大集合以及实现类\",\"link\":\"#两大集合以及实现类\",\"children\":[]},{\"level\":3,\"title\":\"ArrayList 和 LinkedList 的区别?\",\"slug\":\"arraylist-和-linkedlist-的区别\",\"link\":\"#arraylist-和-linkedlist-的区别\",\"children\":[]},{\"level\":3,\"title\":\"HashMap 与 Hashtable 区别\",\"slug\":\"hashmap-与-hashtable-区别\",\"link\":\"#hashmap-与-hashtable-区别\",\"children\":[]},{\"level\":3,\"title\":\"线程安全的 List 和 Map\",\"slug\":\"线程安全的-list-和-map\",\"link\":\"#线程安全的-list-和-map\",\"children\":[]},{\"level\":3,\"title\":\"HashMap 的源码\",\"slug\":\"hashmap-的源码\",\"link\":\"#hashmap-的源码\",\"children\":[]},{\"level\":3,\"title\":\"ArrayList 的扩容机制\",\"slug\":\"arraylist-的扩容机制\",\"link\":\"#arraylist-的扩容机制\",\"children\":[]}]},{\"level\":2,\"title\":\"面向对象\",\"slug\":\"面向对象\",\"link\":\"#面向对象\",\"children\":[{\"level\":3,\"title\":\"三大特征\",\"slug\":\"三大特征\",\"link\":\"#三大特征\",\"children\":[]},{\"level\":3,\"title\":\"深拷贝和浅拷贝区别了解吗？什么是引用拷贝？\",\"slug\":\"深拷贝和浅拷贝区别了解吗-什么是引用拷贝\",\"link\":\"#深拷贝和浅拷贝区别了解吗-什么是引用拷贝\",\"children\":[]}]},{\"level\":2,\"title\":\"反射\",\"slug\":\"反射\",\"link\":\"#反射\",\"children\":[{\"level\":3,\"title\":\"是什么\",\"slug\":\"是什么\",\"link\":\"#是什么\",\"children\":[]}]}],\"readingTime\":{\"minutes\":8.15,\"words\":2444},\"filePathRelative\":\"java/java.md\",\"autoDesc\":true}")

if (import.meta.webpackHot) {
  import.meta.webpackHot.accept()
  if (__VUE_HMR_RUNTIME__.updatePageData) {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  }
}

if (import.meta.hot) {
  import.meta.hot.accept(({ data }) => {
    __VUE_HMR_RUNTIME__.updatePageData(data)
  })
}
